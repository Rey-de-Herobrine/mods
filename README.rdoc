= Mods

{<img src="https://secure.travis-ci.org/sul-dlss/mods.png?branch=master" alt="Build Status" />}[http://travis-ci.org/sul-dlss/mods]

A Gem to parse MODS (Metadata Object Description Schema) records.  More information about MODS can be found at http://www.loc.gov/standards/mods/registry.php.

Source code at https://github.com/sul-dlss/mods/

Generated API docs at  http://rubydoc.info/github/sul-dlss/mods/

== Installation

Add this line to your application's Gemfile:

    gem 'mods'

And then execute:

    $ bundle

Or install it yourself as:

    $ gem install mods

== Usage

TODO: Write usage instructions here

== Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Write code and tests.
4. Commit your changes (`git commit -am 'Added some feature'`)
5. Push to the branch (`git push origin my-new-feature`)
6. Create new Pull Request

== Releases

0.0.16 add role convenience methods (within name node)
0.0.15 make namespace aware processing the default
0.0.14 don't lose xml encoding in reader.normalize_mods under jruby
0.0.13 really really fix removal of xsi:schemaLocation in jruby
0.0.12 fix failing jruby test
0.0.11 fix remove xsi:schemaLocation attribute from mods element when not using namespaces
0.0.10 remove xsi:schemaLocation attribute from mods element when not using namespaces
0.0.9 implement from_nk_node as way to load record object
0.0.8 implement relatedItem and attributes on all simple top level elements
0.0.7 implement part
0.0.6 implement recordInfo, fix to work under jruby
0.0.5 implement subject, change a few constants
0.0.4 implement language, location, origin_info, physical_description
0.0.3 use nom-xml gem and make this more nokogiri-ish; implement name, title, and simple top level elements with no subelements
0.0.2 Set up rake tasks, publishing rdoc, and continuous integration.
0.0.1 Grab the name
